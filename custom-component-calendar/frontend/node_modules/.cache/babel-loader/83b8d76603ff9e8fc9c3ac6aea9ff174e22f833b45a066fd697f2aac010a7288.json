{"ast":null,"code":"var _jsxFileName = \"/Users/junyulu/Desktop/custom-component-project/frontend/src/components/CustomCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './CustomCalendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomCalendar = () => {\n  _s();\n  var _selectedDates$checkI2, _selectedDates$checkO2;\n  const [selectedDates, setSelectedDates] = useState({\n    checkIn: null,\n    checkOut: null\n  });\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const daysInMonth = (month, year) => new Date(year, month + 1, 0).getDate();\n  const generateCalendar = () => {\n    const days = [];\n    const year = currentMonth.getFullYear();\n    const month = currentMonth.getMonth();\n    const totalDays = daysInMonth(month, year);\n    for (let day = 1; day <= totalDays; day++) {\n      const date = new Date(year, month, day);\n      days.push(date);\n    }\n    return days;\n  };\n  const handleDateClick = date => {\n    if (!selectedDates.checkIn) {\n      setSelectedDates({\n        ...selectedDates,\n        checkIn: date\n      });\n    } else if (!selectedDates.checkOut && date > selectedDates.checkIn) {\n      setSelectedDates({\n        ...selectedDates,\n        checkOut: date\n      });\n    } else {\n      alert('Invalid selection. Please ensure the check-out date is after the check-in date.');\n    }\n  };\n  const renderCalendarDays = () => {\n    return generateCalendar().map((date, index) => {\n      var _selectedDates$checkI, _selectedDates$checkO;\n      const isCheckIn = ((_selectedDates$checkI = selectedDates.checkIn) === null || _selectedDates$checkI === void 0 ? void 0 : _selectedDates$checkI.toDateString()) === date.toDateString();\n      const isCheckOut = ((_selectedDates$checkO = selectedDates.checkOut) === null || _selectedDates$checkO === void 0 ? void 0 : _selectedDates$checkO.toDateString()) === date.toDateString();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `calendar-day ${isCheckIn ? 'check-in' : ''} ${isCheckOut ? 'check-out' : ''}`,\n        onClick: () => handleDateClick(date),\n        children: date.getDate()\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this);\n    });\n  };\n  const navigateMonth = direction => {\n    const newMonth = new Date(currentMonth.getFullYear(), currentMonth.getMonth() + direction, 1);\n    setCurrentMonth(newMonth);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigateMonth(-1),\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: currentMonth.toLocaleString('default', {\n          month: 'long',\n          year: 'numeric'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigateMonth(1),\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid\",\n      children: renderCalendarDays()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-dates\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Check-In: \", ((_selectedDates$checkI2 = selectedDates.checkIn) === null || _selectedDates$checkI2 === void 0 ? void 0 : _selectedDates$checkI2.toDateString()) || 'Not selected']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Check-Out: \", ((_selectedDates$checkO2 = selectedDates.checkOut) === null || _selectedDates$checkO2 === void 0 ? void 0 : _selectedDates$checkO2.toDateString()) || 'Not selected']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(CustomCalendar, \"OBHEEeZ/FN90NymURkDZZBJMimk=\");\n_c = CustomCalendar;\nexport default CustomCalendar;\nvar _c;\n$RefreshReg$(_c, \"CustomCalendar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CustomCalendar","_s","_selectedDates$checkI2","_selectedDates$checkO2","selectedDates","setSelectedDates","checkIn","checkOut","currentMonth","setCurrentMonth","Date","daysInMonth","month","year","getDate","generateCalendar","days","getFullYear","getMonth","totalDays","day","date","push","handleDateClick","alert","renderCalendarDays","map","index","_selectedDates$checkI","_selectedDates$checkO","isCheckIn","toDateString","isCheckOut","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","navigateMonth","direction","newMonth","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/junyulu/Desktop/custom-component-project/frontend/src/components/CustomCalendar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './CustomCalendar.css';\n\nconst CustomCalendar = () => {\n    const [selectedDates, setSelectedDates] = useState({ checkIn: null, checkOut: null });\n    const [currentMonth, setCurrentMonth] = useState(new Date());\n\n    const daysInMonth = (month, year) => new Date(year, month + 1, 0).getDate();\n\n    const generateCalendar = () => {\n        const days = [];\n        const year = currentMonth.getFullYear();\n        const month = currentMonth.getMonth();\n        const totalDays = daysInMonth(month, year);\n\n        for (let day = 1; day <= totalDays; day++) {\n            const date = new Date(year, month, day);\n            days.push(date);\n        }\n\n        return days;\n    };\n\n    const handleDateClick = (date) => {\n        if (!selectedDates.checkIn) {\n            setSelectedDates({ ...selectedDates, checkIn: date });\n        } else if (!selectedDates.checkOut && date > selectedDates.checkIn) {\n            setSelectedDates({ ...selectedDates, checkOut: date });\n        } else {\n            alert('Invalid selection. Please ensure the check-out date is after the check-in date.');\n        }\n    };\n\n    const renderCalendarDays = () => {\n        return generateCalendar().map((date, index) => {\n            const isCheckIn = selectedDates.checkIn?.toDateString() === date.toDateString();\n            const isCheckOut = selectedDates.checkOut?.toDateString() === date.toDateString();\n\n            return (\n                <div\n                    key={index}\n                    className={`calendar-day ${isCheckIn ? 'check-in' : ''} ${\n                        isCheckOut ? 'check-out' : ''\n                    }`}\n                    onClick={() => handleDateClick(date)}\n                >\n                    {date.getDate()}\n                </div>\n            );\n        });\n    };\n\n    const navigateMonth = (direction) => {\n        const newMonth = new Date(\n            currentMonth.getFullYear(),\n            currentMonth.getMonth() + direction,\n            1\n        );\n        setCurrentMonth(newMonth);\n    };\n\n    return (\n        <div className=\"custom-calendar\">\n            <div className=\"calendar-header\">\n                <button onClick={() => navigateMonth(-1)}>&lt;</button>\n                <span>{currentMonth.toLocaleString('default', { month: 'long', year: 'numeric' })}</span>\n                <button onClick={() => navigateMonth(1)}>&gt;</button>\n            </div>\n            <div className=\"calendar-grid\">{renderCalendarDays()}</div>\n            <div className=\"selected-dates\">\n                <p>Check-In: {selectedDates.checkIn?.toDateString() || 'Not selected'}</p>\n                <p>Check-Out: {selectedDates.checkOut?.toDateString() || 'Not selected'}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default CustomCalendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}